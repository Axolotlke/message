<?php
// $Id$

/**
 * Test the Message CRUD handling.
 */
class MessageCrud extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Message CRUD',
      'description' => 'Test the create, update and remove of Message entitys.',
      'group' => 'Message',
    );
  }

  function setUp() {
    parent::setUp('ctools', 'entity', 'message');
  }

  /**
   * Test CRUD of message entity.
   */
  function testMessageCrud() {
    $web_user = $this->drupalCreateUser();
    $this->drupalLogin($web_user);

    debug($web_user);

    $message_type = message_type_create('foo');
    $message_type->save();

    // TODO: Find the right place for this.
    // hook_message_type_insert() runs only after hook_entity_info_alter()
    // where the bundles are inserted.
    // Add the message realm field to the new bundle.
    message_add_field_message_realm($message_type->name);

    $message = message_create('foo', array(), TRUE, $web_user);

    $mid = $message->mid;

    // Reload the message to see it was saved.
    $message = message_load($mid);

    // Assert the default realm values were saved.
    $property = MESSAGE_FIELD_REALM;
    $this->assertEqual($message->{$property}[LANGUAGE_NONE][0]['realm'], 'user', t('Message realm is assigned to the default "user" realm.'));
    $this->assertEqual($message->{$property}[LANGUAGE_NONE][0]['realm_id'], $web_user->uid, t('Message realm ID is equal to the current user.'));
  }
}