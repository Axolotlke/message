<?php
// $Id$

/**
 * Implementation of hook_theme().
 */
function message_ui_theme() {
  $items = array();
  $items['message_ui_admin'] = array(
    'arguments' => array('form' => array()),
    'path' => drupal_get_path('module', 'message_ui') .'/theme',
    'file' => 'theme.inc',
  );

  return $items;
}

/**
 * Implementation of hook_menu().
 */
function message_ui_menu() {
  $items['admin/build/message'] = array(
    'title' => 'Messages',
    'description' => 'Add message templates.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_admin'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/build/message/list'] = array(
    'title' => 'List',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_admin'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/build/message/add'] = array(
    'title' => 'Add',
    'description' => 'Add a message to your site.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_form', 'add'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  $items['admin/build/message/import'] = array(
    'title' => 'Import',
    'description' => 'Import a message definition into your site.',
    'page callback' => 'message_ui_import_page',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
  $items['admin/build/message/list/%message'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_form', 'edit', 4),
    'type' => MENU_CALLBACK,
  );
  $items['admin/build/message/list/%message/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_form', 'edit', 4),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -1,
  );
  $items['admin/build/message/list/%message/clone'] = array(
    'title' => 'Clone',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_form', 'clone', 4),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/build/message/list/%message/export'] = array(
    'title' => 'Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_export', 4),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/build/message/list/%message/revert'] = array(
    'title' => 'Revert',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_confirm', 'revert', 4),
    'access callback' => 'message_ui_task_access',
    'access arguments' => array(4, 'revert'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/build/message/list/%message/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_confirm', 'delete', 4),
    'access callback' => 'message_ui_task_access',
    'access arguments' => array(4, 'delete'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/build/message/list/%message/disable'] = array(
    'title' => 'Disable',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_confirm', 'disable', 4),
    'access callback' => 'message_ui_task_access',
    'access arguments' => array(4, 'disable'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/build/message/list/%message/enable'] = array(
    'title' => 'Enable',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('message_ui_confirm', 'enable', 4),
    'access callback' => 'message_ui_task_access',
    'access arguments' => array(4, 'enable'),
    'type' => MENU_LOCAL_TASK,
  );

  foreach ($items as $path => $item) {
    $items[$path]['access callback'] = isset($items[$path]['access callback']) ? $items[$path]['access callback'] : 'user_access';
    $items[$path]['access arguments'] = isset($items[$path]['access arguments']) ? $items[$path]['access arguments'] : array('administer site configuration');
    $items[$path]['file'] = 'message_ui.admin.inc';
  }
  return $items;
}

/**
 * Menu access callback for various tasks.
 */
function message_ui_task_access($message, $op) {
  switch ($op) {
    case 'revert':
      return ($message->export_type & EXPORT_IN_DATABASE) && ($message->export_type & EXPORT_IN_CODE);
    case 'delete':
      return ($message->export_type & EXPORT_IN_DATABASE) && !($message->export_type & EXPORT_IN_CODE);
    case 'disable':
      return empty($message->disabled);
    case 'enable':
      return !empty($message->disabled);
  }
  return TRUE;
}

/**
 * Implementation of hook_help().
 */
function message_ui_help($path, $arg) {
  switch ($path) {
    case 'admin/build/message':
      return '<p>'.
        t('Messages provide you with a way to add "template" messages that can later be used to create message instances.')
        .'</p>';
      break;
  }
}

